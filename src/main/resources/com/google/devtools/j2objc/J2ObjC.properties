# Copyright 2011 Google Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Properties file for the J2ObjC tool.  This tool is not localized, but
# properties remain useful for text that likely to be changed frequently.

# Header used for generated files.
# Parameters: source file, username, date, year
file-header = //\n\
//  Generated by the J2ObjC translator.  DO NOT EDIT!\n\
//  source: %s\n\
//\n\
//  Created by %s on %s.\n\
//\n

# Usage message, displayed when an invalid option is specified.
usage-message = Usage: j2objc <options> <source files>\n\
use --help for a list of possible options

# Help message.
help-message = Usage: j2objc <options> <source files>\n\
where possible options include:\n\
  -sourcepath <path>        Specify where to find input source files\n\
  -classpath <path>         Specify where to find user class files\n\
  -d <directory>            Specify where to place generated Objective-C files\n\
  -g                        Generate debugging support\n\
  --no-package-directories  Generate output files to specified directory, without\
  \n                            create package sub-directories\n\
  -x <language>             Specify what language to output.  Possible values\
  \n                            are objective-c (default) and objective-c++\n\
  -use-reference-counting   Generate Objective-C code to support iOS manual\
  \n                            reference counting (default)\n\
  -use-gc                   Generate Objective-C code to support garbage\
  \n                            collection (requires libjre_emul.a rebuild)\n\
  -use-arc                  Generate Objective-C code to support Automatic\
  \n                            Reference Counting (ARC)\n\
  -Werror                   Make all warnings into errors\n\
  -q, --quiet               Do not print status messages\n\
  -v, --verbose             Output messages about what the translator is doing\n\
  --prefix <package=prefix> Substitute a specified prefix for a package name\n\
  --prefixes <file>         Specify a properties file with prefix definitions\n\
  -pluginpath <path>        Specify where to find plugin class files\n\
  -pluginoptions <options>  Comma separated key=value pairs passed to all plugins\n\
  --mapping <file>          Add a method mapping file\n\
  --dead-code-report <file> Specify a ProGuard usage report for dead code elimination\n\
  --mem-debug               Generate code to display memory allocation graphs\n\
  --generate-native-stubs   Generate method bodies for native methods that do not have\
  \n                            OCNI native code comments\
  --no-inline-field-access  Turn off in-lining of generated field accessors.\n\
  --no-generate-test-main   Turn off automatically generated main method for JUnit tests\n\
  --ignore-missing-imports  Continue translation if an imported class is not\
  \n                            found on the class or source paths.\n\
  --print-converted-sources Print input source files after initial conversion\n\
  -t, --timing-info         Print time spent in translation steps\n\
  -Xbootclasspath:<path>    Boot path used by translation (not the tool itself)\n\
  -h, --help                Print this message.
